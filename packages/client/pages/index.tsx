import type { IBooking } from "@spokesafe/types";
import Head from "next/head";
import Image from "next/image";
import React, { useMemo, useState } from "react";
import styles from "../styles/Home.module.css";
import { UserProfileHeader } from "../components/user-profile-header/UserProfileHeader";
interface Props {
  bookings: IBooking[];
}
const Home = ({ bookings }: Props) => {
  const [currentPage, setCurrentPage] = useState(0);
  const bookingsToDisplay = useMemo(() => {
    const items = [...bookings];
    return {
      pages: Math.ceil(items.length / 10),
      items: items.slice(currentPage * 10, (currentPage + 1) * 10),
    };
  }, [currentPage, bookings]);
  return (
    <div className={styles.container}>
      <Head>
        <title>Spokesafe Code test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <UserProfileHeader />
      <main className={styles.main}>
        {bookingsToDisplay &&
          bookingsToDisplay.items[0] &&
          bookingsToDisplay.items.map((x) => {
            return (
              <div key={x._id} className={styles.booking_item}>
                <p>{JSON.stringify(x)}</p>
              </div>
            );
          })}
      </main>
      {/* Page controls */}
      <div className={styles.page_controls}>
        <button onClick={() => setCurrentPage(currentPage + 1)}>
          Next Page
        </button>
        {Array.from({ length: bookingsToDisplay.pages }).map((x, i) => {
          return (
            <button
              className={styles.button}
              key={i}
              onClick={() => setCurrentPage(i)}
            >
              {i + 1}
            </button>
          );
        })}
        <button
          className={styles.button}
          onClick={() => setCurrentPage(currentPage - 1)}
        >
          Prev page
        </button>
      </div>
    </div>
  );
};
export async function getStaticProps() {
  try {
    const bookings = await fetch("http://localhost:4041/bookings");
    const json = await bookings.json();
    return {
      props: {
        bookings: json,
      },
    };
  } catch (error) {
    throw new Error(error as any);
  }
}
export default Home;
